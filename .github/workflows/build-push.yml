name: Build and Push Docker Image

on:
  workflow_call:
    inputs:
      image_name:
        required: true
        type: string
      platforms:
        required: true
        type: string
      full_version:
        required: false
        type: string
    secrets:
      DOCKER_USERNAME:
        required: true
      DOCKER_TOKEN:
        required: true
      GITHUB_TOKEN:
        required: true

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Update version
        id: version
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          pip install requests
          chmod +x .github/workflows/build-push/update_version.py
          .github/workflows/build-push/update_version.py

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate Docker Tags
        id: meta
        run: |
          REPO_OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          TAGS="${{ inputs.image_name }}:latest,${{ inputs.image_name }}:${{ inputs.full_version }}"
          echo "tags=${TAGS}" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: src
          platforms: ${{ inputs.platforms }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: |
            org.opencontainers.image.title=${{ inputs.image_name }}
            org.opencontainers.image.version=${{ inputs.full_version }}
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Save Docker image
        run: |
          docker save ${{ steps.meta.outputs.tags }} -o "${{ inputs.image_name }}.tar"

      - name: Generate SBOM
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          FULL_VERSION: ${{ inputs.full_version }}
        run: |
          chmod +x .github/workflows/build-push/generate_sbom.py
          .github/workflows/build-push/generate_sbom.py

      - name: Generate Vulnerability Report
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          FULL_VERSION: ${{ inputs.full_version }}
        run: |
          chmod +x .github/workflows/build-push/generate_vulnerability_report.py
          .github/workflows/build-push/generate_vulnerability_report.py

      - name: Create Release
        id: release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          chmod +x .github/workflows/build-push/publish_release.py
          .github/workflows/build-push/publish_release.py

      - name: Upload release assets
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION=${{ inputs.full_version }}
          cp .vulnerability_report.txt vulnerability_report.txt
          gh release upload "$VERSION" \
            "${{ inputs.image_name }}.tar" \
            ".sbom/sbom.json" \
            ".sbom/sbom.txt" \
            "vulnerability_report.txt"
