name: Build and Push Docker Image
on:
  push:
    branches: [ main ]
    tags: [ 'v*.*.*' ]
    paths:
      - 'src/**'
  workflow_dispatch:

env:
  IMAGE_NAME: gh-runner
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  PLATFORMS: linux/amd64,linux/arm64

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Update version
        id: version
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          pip install requests
          chmod +x .github/scripts/update_version.py
          .github/scripts/update_version.py

      # - name: Set up QEMU
      #   uses: docker/setup-qemu-action@v3

      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v3

      # - name: Log in to Docker Hub
      #   if: github.event_name != 'pull_request'
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_TOKEN }}

      # - name: Log in to GitHub Container Registry
      #   if: github.event_name != 'pull_request'
      #   uses: docker/login-action@v3
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}

      # - name: Extract metadata (tags, labels) for Docker
      #   id: meta
      #   uses: docker/metadata-action@v5
      #   with:
      #     images: |
      #       ${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}
      #       ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
      #     tags: ${{ steps.version.outputs.tags }}

      # - name: Build and push Docker image
      #   uses: docker/build-push-action@v5
      #   with:
      #     context: src
      #     platforms: ${{ env.PLATFORMS }}
      #     push: ${{ github.event_name != 'pull_request' }}
      #     tags: ${{ steps.meta.outputs.tags }}
      #     labels: ${{ steps.meta.outputs.labels }}
      #     cache-from: type=gha
      #     cache-to: type=gha,mode=max